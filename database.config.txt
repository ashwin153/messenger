# This file contains all the necessary information to recreate the database that UT Messenger
# uses to store student information, conversations, and messages. Just copy and paste this information into
# a MySQL terminal, and press Enter!
DROP TABLE IF EXISTS STUDENT_CONVERSATION;
DROP TABLE IF EXISTS MESSAGE;
DROP TABLE IF EXISTS CONVERSATION;
DROP TABLE IF EXISTS STUDENT_COURSE;
DROP TABLE IF EXISTS COURSE_TIMING;
DROP TABLE IF EXISTS COURSE;
DROP TABLE IF EXISTS TIMING;
DROP TABLE IF EXISTS STUDENT;

DROP DATABASE MESSENGER;

CREATE DATABASE MESSENGER;
USE MESSENGER;

CREATE TABLE CONVERSATION (
	ID INT PRIMARY KEY AUTO_INCREMENT
);

CREATE TABLE STUDENT (
	ID INT PRIMARY KEY AUTO_INCREMENT,
	EID VARCHAR(32),
	NAME VARCHAR(70),	
	EMAIL VARCHAR(255),
	PHONE VARCHAR(20),
	BIRTHDAY BIGINT(14),	
	YEAR INT(4),
	MAJOR VARCHAR(60),
	COLLEGE VARCHAR(45),
	DORM VARCHAR(8),
	LAST_UPDATE_TIME BIGINT(14),
	LAST_REFRESH_TIME BIGINT(14)
);

CREATE TABLE MESSAGE (
	ID INT PRIMARY KEY AUTO_INCREMENT,
	CONVERSATION_ID INT NOT NULL,
	SENDER_ID INT NOT NULL,
	SENT_TIME BIGINT(14),
	BODY TEXT,
	
	FOREIGN KEY (CONVERSATION_ID) REFERENCES CONVERSATION(ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (SENDER_ID) REFERENCES STUDENT(ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE STUDENT_CONVERSATION (
	ID INT PRIMARY KEY AUTO_INCREMENT,
	STUDENT_ID INT NOT NULL,
	CONVERSATION_ID INT NOT NULL,
	
	FOREIGN KEY (CONVERSATION_ID) REFERENCES CONVERSATION(ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE STUDENT_COURSE (
	ID INT PRIMARY KEY AUTO_INCREMENT,
	STUDENT_ID INT,
	COURSE_ID INT,
	
	UNIQUE KEY (STUDENT_ID, COURSE_ID)
);

CREATE TABLE COURSE (
	ID INT PRIMARY KEY AUTO_INCREMENT,
	DEPARTMENT VARCHAR(3),
	CODE VARCHAR(5) UNIQUE KEY,
	NAME VARCHAR(45),
	NUMBER VARCHAR(4)
);

CREATE TABLE TIMING (
	ID INT PRIMARY KEY AUTO_INCREMENT,
	BUILDING VARCHAR(3),
	ROOM VARCHAR(10),
	DAY VARCHAR(9),
	START_TIME BIGINT(14),
	END_TIME BIGINT(14)
);

CREATE TABLE COURSE_TIMING (
	ID INT PRIMARY KEY AUTO_INCREMENT,
	COURSE_ID INT,
	TIMING_ID INT,
	
	UNIQUE KEY (COURSE_ID, TIMING_ID),
	FOREIGN KEY (COURSE_ID) REFERENCES COURSE(ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (TIMING_ID) REFERENCES TIMING(ID) ON UPDATE CASCADE ON DELETE CASCADE
);
	
